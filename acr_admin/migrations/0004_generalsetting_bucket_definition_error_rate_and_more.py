# Generated by Django 5.2.4 on 2025-07-21 17:04

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("acr_admin", "0003_transcriptionanalysis"),
    ]

    operations = [
        migrations.AddField(
            model_name="generalsetting",
            name="bucket_definition_error_rate",
            field=models.PositiveIntegerField(
                blank=True,
                default=80,
                help_text="Minimum accuracy percentage required for bucket classification (e.g., 80).",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="bucket_prompt",
            field=models.TextField(
                blank=True,
                help_text="Prompt describing the definitions and classification rules for wellness buckets.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_frequency_penalty",
            field=models.FloatField(
                blank=True,
                default=0.0,
                help_text="ChatGPT frequency penalty parameter.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_max_tokens",
            field=models.PositiveIntegerField(
                blank=True,
                default=0,
                help_text="Maximum tokens for ChatGPT response (0 for default).",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_model",
            field=models.CharField(
                blank=True,
                default="gpt-40",
                help_text="ChatGPT model to use for classification (e.g., gpt-40).",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_presence_penalty",
            field=models.FloatField(
                blank=True,
                default=0.0,
                help_text="ChatGPT presence penalty parameter.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_temperature",
            field=models.FloatField(
                blank=True,
                default=1.0,
                help_text="ChatGPT temperature parameter.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="chatgpt_top_p",
            field=models.FloatField(
                blank=True, default=1.0, help_text="ChatGPT top_p parameter.", null=True
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="determine_radio_content_type_prompt",
            field=models.TextField(
                blank=True,
                help_text="Prompt for determining radio content type from transcript.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="radio_segment_error_rate",
            field=models.PositiveIntegerField(
                blank=True,
                default=80,
                help_text="Minimum accuracy percentage required for radio segment classification (e.g., 80).",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="generalsetting",
            name="radio_segment_types",
            field=models.TextField(
                blank=True,
                help_text="Comma-separated list of radio segment/content types.",
                null=True,
            ),
        ),
    ]
